{"ast":null,"code":"var _jsxFileName = \"/home/lgabriel/Desktop/Code /pc-api/src/components/PokemonCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { MyContext } from '../provider/MyProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PokemonCard(_ref) {\n  _s();\n\n  let {\n    name\n  } = _ref;\n  const {\n    dataAPI\n  } = useContext(MyContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [dataAPI ? dataAPI.results.map((pokemon, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: pokemon\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this), console.log(dataAPI)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PokemonCard, \"7uO6aPpaXr/g+mpUpQ7KUZQ44Hw=\");\n\n_c = PokemonCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonCard\");","map":{"version":3,"sources":["/home/lgabriel/Desktop/Code /pc-api/src/components/PokemonCard.jsx"],"names":["React","useContext","MyContext","PokemonCard","name","dataAPI","results","map","pokemon","index","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,wBAA1B;;AAEA,eAAe,SAASC,WAAT,OAA+B;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAAcJ,UAAU,CAACC,SAAD,CAA9B;AACA,sBACE;AAAA,eACIG,OAAO,GAAGA,OAAO,CAACC,OAAR,CAAgBC,GAAhB,CAAoB,CAACC,OAAD,EAAUC,KAAV,kBAC9B;AAAA,gBAAmBD;AAAnB,OAASC,KAAT;AAAA;AAAA;AAAA;AAAA,YADU,CAAH,gBAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHP,EAIGC,OAAO,CAACC,GAAR,CAAYN,OAAZ,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAVuBF,W;;KAAAA,W","sourcesContent":["import React, { useContext } from 'react';\nimport { MyContext } from '../provider/MyProvider';\n\nexport default function PokemonCard({ name }) {\n  const { dataAPI } = useContext(MyContext);\n  return (\n    <div>\n      { dataAPI ? dataAPI.results.map((pokemon, index) => (\n        <p key={ index }>{ pokemon }</p>\n      )) : <p>Loading...</p> }\n      {console.log(dataAPI)}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}